#!/usr/bin/env perl
use 5.14.0;
use warnings;
use utf8::all;
use Anki::Corpus;
use Encode qw/encode_utf8 decode_utf8/;
use Proc::InvokeEditor;

my $corpus = Anki::Corpus->new;
$corpus->each_sentence('WHERE japanese LIKE "%〔%〕";', sub {
    my $sentence = shift;
    say $sentence->japanese;

    (my $new_japanese = $sentence->japanese) =~ s/〔(.*)〕$//;
    my $setsumei = $1;
    $corpus->dbh->begin_work;

    $corpus->add_note(
        sentence => $sentence->id,
        type     => '説明',
        value    => $setsumei,
    );

    $corpus->dbh->do("UPDATE sentences SET japanese=? WHERE rowid=?", {},
        $new_japanese,
        $sentence->id,
    );

    $corpus->dbh->commit;
});

$corpus->each_sentence('WHERE source="プログレッシブ英和・和英中辞典" and japanese LIKE "%［%］%";', sub {
    my $sentence = shift;
    my $input = join '｜', $sentence->japanese, $sentence->translation;
    my @new_sentences = split /\n/, decode_utf8(Proc::InvokeEditor->edit(encode_utf8($input)));

    $corpus->dbh->begin_work;

    my %notes = %{ $sentence->notes };

    for (@new_sentences) {
        my ($japanese, $translation) = split /｜/, $_;
        $corpus->add_sentence(
            source      =>  'プログレッシブ英和・和英中辞典',
            japanese    => $japanese,
            translation => $translation,
            notes       => \%notes,
        );
    }

    $corpus->dbh->do("delete from notes where sentence=?", {}, $sentence->rowid);
    $corpus->dbh->do("delete from sentences where rowid=?", {}, $sentence->rowid);

    $corpus->dbh->commit;
});

$corpus->each_sentence('WHERE readings like "%<br%";', sub {
    my $sentence = shift;

    my $new_readings = $sentence->readings;
    $new_readings =~ s/<br[^>]*>/\n/g;

    $corpus->dbh->do("update sentences set readings=? where rowid=?", {}, $new_readings, $sentence->rowid);
});

my @errors;
$corpus->each_sentence('WHERE source="プログレッシブ英和・和英中辞典" AND japanese LIKE "%（%）%";', sub {
    my $sentence = shift;
    push @errors, $sentence;
});

if (@errors) {
    my @output;
    for my $sentence (@errors) {
        $sentence->japanese =~ /（(.*?)）/;
        push @output,
            "# " . $sentence->japanese,
            "【$1】";
    }

    my @input = split /\n/, decode_utf8(Proc::InvokeEditor->edit(encode_utf8(join "\n", @output)));

    for my $sentence (@errors) {
        (my $new_japanese = $sentence->japanese) =~ s/（(.*?)）//;
        my (undef, $reading) = splice @input, 0, 2;
        $corpus->dbh->begin_work;

        $corpus->dbh->do("UPDATE sentences SET japanese=?, readings=? WHERE rowid=?", {},
            $new_japanese,
            $reading,
            $sentence->id,
        );

        $corpus->dbh->commit;
    }
}

for my $field ('japanese', 'translation') {
    $corpus->each_sentence(qq{WHERE $field LIKE "% " or $field LIKE " %";}, sub {
        my $sentence = shift;
        say $sentence->id . "|$field: <" . $sentence->$field . ">";

        (my $new_value = $sentence->$field) =~ s/^\s+|\s+$//mg;
        $corpus->dbh->begin_work;

        $corpus->dbh->do("UPDATE sentences SET $field=? WHERE rowid=?", {},
            $new_value,
            $sentence->id,
        );

        $corpus->dbh->commit;
    });
}
