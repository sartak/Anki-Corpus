#!/usr/bin/env perl
use 5.14.0;
use warnings;
use utf8::all;
use Anki::Corpus;
use Term::ReadKey;

die "usage: $0 query\n" unless @ARGV;

ReadMode 3;
END { ReadMode 0 }

my $corpus = Anki::Corpus->new;

sub copy {
    my $text = shift;
    open my $handle, '| pbcopy';
    print $handle $text;
    close $handle;
    say "Copied: $text";
}

my %commands = (
    "s" => sub { shift->suspend },
    "u" => sub { shift->unsuspend},
    "q" => sub { exit },
    "N" => sub { copy(shift->japanese) },
    "S" => sub { copy(shift->source) },
    "H" => sub { copy(shift->translation) },
);
my $commands = join '', sort keys %commands;

my $cb = sub {
    my $sentence = shift;
    my $regex    = shift;

    print "\e[2J";
    $corpus->print_sentence($sentence, $regex);

    local $| = 1;

    while (1) {
        delete local $commands{H} unless $sentence->has_translation;
        delete local $commands{$sentence->suspended ? 's' : 'u'};

        my $commands = join '', sort keys %commands;
        print "Command [$commands]: ";

        my $command = ReadKey 0;
        exit if !defined($command);
        print "$command\n";
        last if $command eq "\n" || $command eq " ";

        if (!exists($commands{$command})) {
            say "Invalid command $command";
            next;
        }

        $commands{$command}->($sentence);
    }
};

my $count = $corpus->scan_for([@ARGV], $cb, 'WHERE suspended=1');

if (!$count) {
    say "No suspended results, showing unsuspended rows";
    $corpus->scan_for([@ARGV], $cb, 'WHERE suspended=0');
}

